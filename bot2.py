import telebot
from telebot import types
from collections import defaultdict

TOKEN = "8400828602:AAGmF8japcI3YkWRmvd2o9QXoohcYc4I7vQ"
bot = telebot.TeleBot(TOKEN)

ADMIN_USERNAME = "@thevladzio"

# –î–∞–Ω–Ω—ã–µ
user_spending = defaultdict(int)      # {user_id: —Å—É–º–º–∞ –ø–æ–∫—É–ø–æ–∫ (–≤ —Ç.—á. —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤)}
referrals = defaultdict(list)         # {referrer_id: [user_id —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤]}
user_referrer = {}                    # {user_id: referrer_id}
reviews = []                         # –æ—Ç–∑—ã–≤—ã –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π

user_language = {}                   # {user_id: "ru" –∏–ª–∏ "ua"}
user_carts = defaultdict(list)      # {user_id: [(product_name, price), ...]}

texts = {
    "choose_lang": "üåç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —è–∑—ã–∫ / –ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å –∑—Ä—É—á–Ω—É –º–æ–≤—É:",
    "lang_ru": "üá∑üá∫ –†—É—Å—Å–∫–∏–π",
    "lang_ua": "üá∫üá¶ –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞",
    "welcome_ru": "üí® –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ *VapeAlva*!\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª:",
    "welcome_ua": "üí® –õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ *VapeAlva*!\n–û–±–µ—Ä—ñ—Ç—å –ø–æ—Ç—Ä—ñ–±–Ω–∏–π —Ä–æ–∑–¥—ñ–ª:",
    "menu_catalog_ru": "üìÇ –ö–∞—Ç–∞–ª–æ–≥",
    "menu_catalog_ua": "üìÇ –ö–∞—Ç–∞–ª–æ–≥",
    "menu_order_ru": "üõí –ó–∞–∫–∞–∑–∞—Ç—å",
    "menu_order_ua": "üõí –ó–∞–º–æ–≤–∏—Ç–∏",
    "menu_cart_ru": "üõç –ö–æ—Ä–∑–∏–Ω–∞",
    "menu_cart_ua": "üõç –ö–æ—à–∏–∫",
    "menu_about_ru": "‚ÑπÔ∏è –û –Ω–∞—Å",
    "menu_about_ua": "‚ÑπÔ∏è –ü—Ä–æ –Ω–∞—Å",
    "menu_partner_ru": "ü§ù –ü–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞",
    "menu_partner_ua": "ü§ù –ü–∞—Ä—Ç–Ω–µ—Ä—Å—å–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–∞",
    "menu_orders_ru": "üì¶ –ú–æ–∏ –∑–∞–∫–∞–∑—ã",
    "menu_orders_ua": "üì¶ –ú–æ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è",
    "menu_reviews_ru": "‚úç –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤",
    "menu_reviews_ua": "‚úç –ó–∞–ª–∏—à–∏—Ç–∏ –≤—ñ–¥–≥—É–∫",
    "back_btn_ru": "‚¨Ö –ù–∞–∑–∞–¥",
    "back_btn_ua": "‚¨Ö –ù–∞–∑–∞–¥",
    "please_choose_ru": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é.",
    "please_choose_ua": "–ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å –ø—É–Ω–∫—Ç –º–µ–Ω—é.",
    "reviews_list_empty_ru": "–ü–æ–∫–∞ –Ω–µ—Ç –æ—Ç–∑—ã–≤–æ–≤. –ë—É–¥—å—Ç–µ –ø–µ—Ä–≤—ã–º!",
    "reviews_list_empty_ua": "–ü–æ–∫–∏ –Ω–µ–º–∞—î –≤—ñ–¥–≥—É–∫—ñ–≤. –ë—É–¥—å—Ç–µ –ø–µ—Ä—à–∏–º–∏!",
    "thank_review_ru": "‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à –æ—Ç–∑—ã–≤ –¥–æ–±–∞–≤–ª–µ–Ω.",
    "thank_review_ua": "‚úÖ –î—è–∫—É—î–º–æ! –í–∞—à –≤—ñ–¥–≥—É–∫ –¥–æ–¥–∞–Ω–æ.",
    "partner_program_ru": (
        "üíº *–ü–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ VapeAlva*\n\n"
        "–ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –ø–æ –≤–∞—à–µ–π –ª–∏—á–Ω–æ–π —Å—Å—ã–ª–∫–µ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ —Ü–µ–Ω–Ω—ã–µ –±–æ–Ω—É—Å—ã!\n\n"
        "üë• –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: *{count}*\n"
        "üéÅ –ö–æ–≥–¥–∞ –≤–∞—à–∏ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã–µ —Å—É–º–º–∞—Ä–Ω–æ —Å–æ–≤–µ—Ä—à–∞—Ç –ø–æ–∫—É–ø–∫–∏ –Ω–∞ *4100 –≥—Ä–Ω*, "
        "–≤—ã –ø–æ–ª—É—á–∏—Ç–µ –ø–æ–¥–∞—Ä–æ–∫ –Ω–∞ –≤—ã–±–æ—Ä:\n"
        "‚Ä¢ üí® –õ—é–±–∞—è –∂–∏–¥–∫–æ—Å—Ç—å –∏–∑ –Ω–∞—à–µ–≥–æ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞\n"
        "‚Ä¢ üîÑ –ò–ª–∏ –¥–≤–∞ –∫–∞—Ä—Ç—Ä–∏–¥–∂–∞ –ø–æ –≤–∞—à–µ–º—É –≤–∫—É—Å—É\n\n"
        "üìå –í—Å—ë –ø—Ä–æ—Å—Ç–æ: –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å—Å—ã–ª–∫—É –¥—Ä—É–∑—å—è–º, –æ–Ω–∏ –∑–∞–∫–∞–∑—ã–≤–∞—é—Ç ‚Äî –≤—ã –∫–æ–ø–∏—Ç–µ –±–æ–Ω—É—Å—ã.\n\n"
        "üîó –í–∞—à–∞ —Å—Å—ã–ª–∫–∞: {link}\n"
        "üí∞ –ü–æ—Ç—Ä–∞—á–µ–Ω–æ –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ: {spent} –≥—Ä–Ω"
    ),
    "partner_program_ua": (
        "üíº *–ü–∞—Ä—Ç–Ω–µ—Ä—Å—å–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–∞ VapeAlva*\n\n"
        "–ó–∞–ø—Ä–æ—à—É–π—Ç–µ –¥—Ä—É–∑—ñ–≤ –∑–∞ –≤–∞—à–∏–º —É–Ω—ñ–∫–∞–ª—å–Ω–∏–º –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º —ñ –æ—Ç—Ä–∏–º—É–π—Ç–µ —Ü—ñ–Ω–Ω—ñ –±–æ–Ω—É—Å–∏!\n\n"
        "üë• –ó–∞–ø—Ä–æ—à–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤: *{count}*\n"
        "üéÅ –ö–æ–ª–∏ –≤–∞—à—ñ –∑–∞–ø—Ä–æ—à–µ–Ω—ñ –∑—Ä–æ–±–ª—è—Ç—å –ø–æ–∫—É–ø–∫–∏ –Ω–∞ —Å—É–º—É *4100 –≥—Ä–Ω*, "
        "–≤–∏ –æ—Ç—Ä–∏–º–∞—î—Ç–µ –ø–æ–¥–∞—Ä—É–Ω–æ–∫ –Ω–∞ –≤–∏–±—ñ—Ä:\n"
        "‚Ä¢ üí® –ë—É–¥—å-—è–∫–∞ —Ä—ñ–¥–∏–Ω–∞ –∑ –Ω–∞—à–æ–≥–æ –∞—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç—É\n"
        "‚Ä¢ üîÑ –ê–±–æ –¥–≤–∞ –∫–∞—Ä—Ç—Ä–∏–¥–∂—ñ –Ω–∞ –≤–∞—à —Å–º–∞–∫\n\n"
        "üìå –ü—Ä–æ—Å—Ç–æ –Ω–∞–¥—Å–∏–ª–∞–π—Ç–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –¥—Ä—É–∑—è–º, –≤–æ–Ω–∏ –∑–∞–º–æ–≤–ª—è—é—Ç—å ‚Äî –≤–∏ –Ω–∞–∫–æ–ø–∏—á—É—î—Ç–µ –±–æ–Ω—É—Å–∏.\n\n"
        "üîó –í–∞—à–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è: {link}\n"
        "üí∞ –í–∏—Ç—Ä–∞—á–µ–Ω–æ –ø–æ –≤–∞—à–æ–º—É –ø–æ—Å–∏–ª–∞–Ω–Ω—é: {spent} –≥—Ä–Ω"
    ),
    "about_ru": (
        "üí® *VapeAlva* ‚Äî –º–∞–≥–∞–∑–∏–Ω –≤–µ–π–ø-—Ç–æ–≤–∞—Ä–æ–≤ —Å –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–º–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞–º–∏.\n"
        "üöÄ –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –≤—Å–µ–π –£–∫—Ä–∞–∏–Ω–µ.\n\n"
        "üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞: @helperAlva"
    ),
    "about_ua": (
        "üí® *VapeAlva* ‚Äî –º–∞–≥–∞–∑–∏–Ω –≤–µ–π–ø-—Ç–æ–≤–∞—Ä—ñ–≤ –∑ –ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω–∏–º–∏ –ø–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫–∞–º–∏.\n"
        "üöÄ –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –≤—Å—ñ–π –£–∫—Ä–∞—ó–Ω—ñ.\n\n"
        "üìû –ü—ñ–¥—Ç—Ä–∏–º–∫–∞: @helperAlva"
    ),
    "cart_empty_ru": "üõí –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞.",
    "cart_empty_ua": "üõç –í–∞—à –∫–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π.",
    "cart_title_ru": "üõí –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞:\n\n",
    "cart_title_ua": "üõç –í–∞—à –∫–æ—à–∏–∫:\n\n",
    "cart_total_ru": "\n*–û–±—â–∞—è —Å—É–º–º–∞:* {total} ‚Ç¥",
    "cart_total_ua": "\n*–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞:* {total} ‚Ç¥",
    "order_button_ru": "–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑",
    "order_button_ua": "–û—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è",
    "pay_method_ru": "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:",
    "pay_method_ua": "–û–±–µ—Ä—ñ—Ç—å —Å–ø–æ—Å—ñ–± –æ–ø–ª–∞—Ç–∏:",
    "pay_on_delivery_ru": "–û–ø–ª–∞—Ç–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏",
    "pay_on_delivery_ua": "–û–ø–ª–∞—Ç–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ",
    "pay_prepay_ru": "–û–ø–ª–∞—Ç–∞ –ö–∞—Ä—Ç–æ–π",
    "pay_prepay_ua": "–û–ø–ª–∞—Ç–∞ –ö–∞—Ä—Ç–∫–æ—é",
    "pay_on_delivery_info_ru": "üìû –° –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞.",
    "pay_on_delivery_info_ua": "üìû –ó –≤–∞–º–∏ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º –∑–≤'—è–∂–µ—Ç—å—Å—è –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.",
    "prepay_info_ru": (
        "üí≥ –û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ –±–æ—Ç–∞:\n\n"
        "–§–ò–û –∫–∞—Ä—Ç—ã: –í–ª–∞–¥–∏—Å–ª–∞–≤. –ì.\n"
        "–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: `4441 1110 3909 5041`\n\n"
        "–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É."
    ),
    "prepay_info_ua": (
        "üí≥ –û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ –±–æ—Ç–∞:\n\n"
        "–ü–Ü–ë –∫–∞—Ä—Ç–∏: –í–ª–∞–¥–∏—Å–ª–∞–≤. –ì.\n"
        "–ù–æ–º–µ—Ä –∫–∞—Ä—Ç–∏: `4441 1110 3909 5041`\n\n"
        "–ü—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –ø—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –æ–ø–ª–∞—Ç—É."
    ),
    "pay_done_ru": "–û–ø–ª–∞—á–µ–Ω–æ",
    "pay_done_ua": "–û–ø–ª–∞—á–µ–Ω–æ",
    "clear_cart_ru": "–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É",
    "clear_cart_ua": "–û—á–∏—Å—Ç–∏—Ç–∏ –∫–æ—à–∏–∫",
    "please_choose_ru": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é.",
    "please_choose_ua": "–ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å –ø—É–Ω–∫—Ç –º–µ–Ω—é.",
    "referral_purchase_ru": "üí∞ –í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª {user} —Å–¥–µ–ª–∞–ª –ø–æ–∫—É–ø–∫—É –Ω–∞ —Å—É–º–º—É {amount} –≥—Ä–Ω.\n–û–±—â–∞—è —Å—É–º–º–∞ –ø–æ–∫—É–ø–æ–∫ –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ: {total} –≥—Ä–Ω.",
    "referral_purchase_ua": "üí∞ –í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª {user} –∑—Ä–æ–±–∏–≤ –ø–æ–∫—É–ø–∫—É –Ω–∞ —Å—É–º—É {amount} –≥—Ä–Ω.\n–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ –ø–æ–∫—É–ø–æ–∫ –ø–æ –≤–∞—à–æ–º—É –ø–æ—Å–∏–ª–∞–Ω–Ω—é: {total} –≥—Ä–Ω."
}

def t(key, lang="ru"):
    key_full = f"{key}_{lang}"
    return texts.get(key_full) or texts.get(key)

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ —è–∑—ã–∫–æ–≤–æ–≥–æ –≤—ã–±–æ—Ä–∞ ---

@bot.message_handler(commands=['start'])
def start_handler(message):
    user_id = message.from_user.id
    args = message.text.split()
    if len(args) > 1:
        # –ï—Å–ª–∏ –ø—Ä–∏—à–ª–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞
        try:
            referrer_id = int(args[1])
            if referrer_id != user_id and user_id not in referrals[referrer_id]:
                referrals[referrer_id].append(user_id)
                user_referrer[user_id] = referrer_id
                try:
                    bot.send_message(referrer_id,
                                     f"üéâ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username or message.from_user.first_name} "
                                     f"–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –ø–æ –≤–∞—à–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ!")
                except Exception:
                    pass
        except Exception:
            pass
    if user_id not in user_language:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        btn_ru = types.KeyboardButton(texts["lang_ru"])
        btn_ua = types.KeyboardButton(texts["lang_ua"])
        markup.add(btn_ru, btn_ua)
        bot.send_message(user_id, texts["choose_lang"], reply_markup=markup)
    else:
        send_main_menu(message)

@bot.message_handler(func=lambda m: m.text in [texts["lang_ru"], texts["lang_ua"]])
def set_language(message):
    user_id = message.from_user.id
    if message.text == texts["lang_ru"]:
        user_language[user_id] = "ru"
    else:
        user_language[user_id] = "ua"
    send_main_menu(message)

def send_main_menu(message):
    user_id = message.from_user.id
    lang = user_language.get(user_id, "ru")

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
    markup.add(
        types.KeyboardButton(t("menu_order", lang)),
        types.KeyboardButton(t("menu_cart", lang)),
        types.KeyboardButton(t("menu_about", lang)),
        types.KeyboardButton(t("menu_partner", lang)),
        types.KeyboardButton(t("menu_orders", lang)),
        types.KeyboardButton(t("menu_reviews", lang)),
    )
    bot.send_message(user_id, t("welcome", lang), parse_mode="Markdown", reply_markup=markup)

# --- –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é ---

@bot.message_handler(func=lambda m: True)
def menu_handler(message):
    user_id = message.from_user.id
    lang = user_language.get(user_id, "ru")
    text = message.text

    if text == t("menu_order", lang):
        show_catalog_menu(message)

    elif text == t("menu_cart", lang):
        show_cart(message)

    elif text == "üí® –ü–æ–¥-—Å–∏—Å—Ç–µ–º—ã" or text == "üí® –ü—ñ–¥-—Å–∏—Å—Ç–µ–º–∏":
        bot.send_message(
            user_id,
            "–†–∞–∑–¥–µ–ª —Å –ø–æ–¥-—Å–∏—Å—Ç–µ–º–∞–º–∏ –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ." if lang == "ru" else "–†–æ–∑–¥—ñ–ª —ñ–∑ –ø—ñ–¥-—Å–∏—Å—Ç–µ–º–∞–º–∏ –ø–æ–∫–∏ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ."
        )

    elif text == "üßÉ –ñ–∏–¥–∫–æ—Å—Ç–∏" or text == "üßÉ –†—ñ–¥–∏–Ω–∏":
        bot.send_message(
            user_id,
            "–†–∞–∑–¥–µ–ª —Å –∂–∏–¥–∫–æ—Å—Ç—è–º–∏ –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ." if lang == "ru" else "–†–æ–∑–¥—ñ–ª –∑ —Ä—ñ–¥–∏–Ω–∞–º–∏ –ø–æ–∫–∏ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ."
        )

    elif text == "üîÑ –ö–∞—Ä—Ç—Ä–∏–¥–∂–∏" or text == "üîÑ –ö–∞—Ä—Ç—Ä–∏–¥–∂—ñ":
        show_cartridge_brands(message)

    elif text == "Vaporesso":
        show_vaporesso_pods(message)

    elif text == "Voopoo":
        if lang == "ru":
            bot.send_message(user_id, "–†–∞–∑–¥–µ–ª –í–æ–æ–ø–æ–æ –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.")
        else:
            bot.send_message(user_id, "–†–æ–∑–¥—ñ–ª –í–æ–æ–ø–æ–æ –ø–æ–∫–∏ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.")

    elif text == t("pay_on_delivery_ru") or text == t("pay_on_delivery_ua"):
        bot.send_message(
            user_id,
            texts["pay_on_delivery_info_ru"] if lang == "ru" else texts["pay_on_delivery_info_ua"]
        )
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(types.KeyboardButton(t("back_btn_ru") if lang == "ru" else t("back_btn_ua")))
        bot.send_message(
            user_id,
            t("back_btn_ru") if lang == "ru" else t("back_btn_ua"),
            reply_markup=markup
        )
        user_carts[user_id] = []

    elif text == t("pay_prepay_ru") or text == t("pay_prepay_ua"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(types.KeyboardButton(t("pay_done_ru") if lang == "ru" else t("pay_done_ua")))
        markup.add(types.KeyboardButton(t("back_btn_ru") if lang == "ru" else t("back_btn_ua")))
        bot.send_message(
            user_id,
            texts["prepay_info_ru"] if lang == "ru" else texts["prepay_info_ua"],
            parse_mode="Markdown",
            reply_markup=markup
        )

    elif text == "–û–ø–ª–∞—Ç–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π" or text == "–û–ø–ª–∞—Ç–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ—é":
        crypto_wallet = "UQDjclQadIIq-DUoTNY53oHfcp9WVi5mRVnUVxVUnQ-vznEc (ton)"
        msg = (
            "üí∞ –û–ø–ª–∞—Ç–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π\n\n"
            f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–ø–ª–∞—Ç—É –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –∞–¥—Ä–µ—Å:\n`{crypto_wallet}`\n\n"
            "–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É."
            if lang == "ru"
            else
            "üí∞ –û–ø–ª–∞—Ç–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ—é\n\n"
            f"–í—ñ–¥–ø—Ä–∞–≤—Ç–µ –æ–ø–ª–∞—Ç—É –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω—É –∞–¥—Ä–µ—Å—É:\n`{crypto_wallet}`\n\n"
            "–ü—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –ø—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –æ–ø–ª–∞—Ç—É."
        )
        bot.send_message(user_id, msg, parse_mode="Markdown")

    elif text == t("pay_done_ru") or text == t("pay_done_ua"):
        try:
            user_mention = f"@{message.from_user.username or message.from_user.first_name}"
            bot.send_message(ADMIN_USERNAME, f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_mention} –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –æ–ø–ª–∞—Ç—É –∑–∞–∫–∞–∑–∞.")
            bot.send_message(user_id, "–°–ø–∞—Å–∏–±–æ! –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã. –û–∂–∏–¥–∞–π—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞." if lang == "ru" else "–î—è–∫—É—î–º–æ! –ú–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –æ–ø–ª–∞—Ç–∏. –û—á—ñ–∫—É–π—Ç–µ –æ–±—Ä–æ–±–∫–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.")
        except Exception:
            pass

    elif text == t("clear_cart_ru") or text == t("clear_cart_ua"):
        user_carts[user_id] = []
        bot.send_message(user_id, "–ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞." if lang == "ru" else "–ö–æ—à–∏–∫ –æ—á–∏—â–µ–Ω–æ.")

    elif text == t("menu_about", lang):
        bot.send_message(user_id, texts["about_ru"] if lang == "ru" else texts["about_ua"], parse_mode="Markdown")

    elif text == t("menu_partner", lang):
        count = len(referrals.get(user_id, []))
        spent = user_spending[user_id]
        ref_link = f"https://t.me/{bot.get_me().username}?start={user_id}"
        partner_text = (texts["partner_program_ru"] if lang == "ru" else texts["partner_program_ua"]).format(count=count, spent=spent, link=ref_link)
        bot.send_message(user_id, partner_text, parse_mode="Markdown")

    elif text == t("menu_orders", lang):
        bot.send_message(user_id, "–ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤ –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞." if lang == "ru" else "–Ü—Å—Ç–æ—Ä—ñ—è –∑–∞–º–æ–≤–ª–µ–Ω—å –ø–æ–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.")

    elif text == t("menu_reviews", lang):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn_view = types.KeyboardButton("üìú –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã" if lang == "ru" else "üìú –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –≤—ñ–¥–≥—É–∫–∏")
        btn_write = types.KeyboardButton("üñä –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤" if lang == "ru" else "üñä –ù–∞–ø–∏—Å–∞—Ç–∏ –≤—ñ–¥–≥—É–∫")
        btn_back = types.KeyboardButton(t("back_btn_ru") if lang == "ru" else t("back_btn_ua"))
        markup.add(btn_view, btn_write)
        markup.add(btn_back)
        bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:" if lang == "ru" else "–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:", reply_markup=markup)

    elif text == "üìú –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã" or text == "üìú –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –≤—ñ–¥–≥—É–∫–∏":
        if reviews:
            all_reviews = "\n\n".join(reviews)
            bot.send_message(user_id, f"üóí *–û—Ç–∑—ã–≤—ã –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π:*\n\n{all_reviews}" if lang == "ru" else f"üóí *–í—ñ–¥–≥—É–∫–∏ –ø–æ–∫—É–ø—Ü—ñ–≤:*\n\n{all_reviews}", parse_mode="Markdown")
        else:
            bot.send_message(user_id, texts["reviews_list_empty_ru"] if lang == "ru" else texts["reviews_list_empty_ua"])

    elif text == "üñä –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤" or text == "üñä –ù–∞–ø–∏—Å–∞—Ç–∏ –≤—ñ–¥–≥—É–∫":
        bot.send_message(user_id, "‚úç –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤ –∑–¥–µ—Å—å:" if lang == "ru" else "‚úç –ù–∞–ø–∏—à—ñ—Ç—å –≤–∞—à –≤—ñ–¥–≥—É–∫ —Ç—É—Ç:")
        bot.register_next_step_handler(message, save_review)

    elif text == t("back_btn_ru") or text == t("back_btn_ua"):
        send_main_menu(message)

    else:
        bot.send_message(user_id, t("please_choose_ru") if lang == "ru" else t("please_choose_ua"))

def save_review(message):
    user_id = message.from_user.id
    lang = user_language.get(user_id, "ru")
    review_text = message.text.strip()
    if review_text:
        reviews.append(review_text)
        bot.send_message(user_id, texts["thank_review_ru"] if lang == "ru" else texts["thank_review_ua"])
    send_main_menu(message)
    
    # --- –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤ ---

def show_catalog_menu(message):
    user_id = message.from_user.id
    lang = user_language.get(user_id, "ru")

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    if lang == "ru":
        markup.add(
            types.KeyboardButton("üí® –ü–æ–¥-—Å–∏—Å—Ç–µ–º—ã"),
            types.KeyboardButton("üßÉ –ñ–∏–¥–∫–æ—Å—Ç–∏"),
            types.KeyboardButton("üîÑ –ö–∞—Ä—Ç—Ä–∏–¥–∂–∏"),
            types.KeyboardButton(t("back_btn_ru"))
        )
    else:
        markup.add(
            types.KeyboardButton("üí® –ü—ñ–¥-—Å–∏—Å—Ç–µ–º–∏"),
            types.KeyboardButton("üßÉ –†—ñ–¥–∏–Ω–∏"),
            types.KeyboardButton("üîÑ –ö–∞—Ä—Ç—Ä–∏–¥–∂—ñ"),
            types.KeyboardButton(t("back_btn_ua"))
        )
    bot.send_message(user_id, t("please_choose_ru") if lang == "ru" else t("please_choose_ua"), reply_markup=markup)

def show_cartridge_brands(message):
    user_id = message.from_user.id
    lang = user_language.get(user_id, "ru")
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    markup.add(
        types.KeyboardButton("Vaporesso"),
        types.KeyboardButton("Voopoo"),
        types.KeyboardButton(t("back_btn_ru") if lang == "ru" else t("back_btn_ua"))
    )
    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –±—Ä–µ–Ω–¥ –∫–∞—Ä—Ç—Ä–∏–¥–∂–µ–π:" if lang == "ru" else "–û–±–µ—Ä—ñ—Ç—å –±—Ä–µ–Ω–¥ –∫–∞—Ä—Ç—Ä–∏–¥–∂—ñ–≤:", reply_markup=markup)

def show_vaporesso_pods(message):
    user_id = message.from_user.id
    lang = user_language.get(user_id, "ru")
    markup = types.InlineKeyboardMarkup(row_width=1)

    pods = [
        ("Pod VAPORESSO Luxe 2", 450),
        ("Pod VAPORESSO Degree", 480),
        ("Pod VAPORESSO OSMALL", 350),
        ("Pod VAPORESSO XROS 3", 390),
    ]

    for name, price in pods:
        btn_text = f"{name} ‚Äî {price} ‚Ç¥"
        callback_data = f"add_to_cart|{name}|{price}"
        markup.add(types.InlineKeyboardButton(btn_text, callback_data=callback_data))

    markup.add(types.InlineKeyboardButton(t("back_btn_ru") if lang == "ru" else t("back_btn_ua"), callback_data="back_to_catalog"))
    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É:" if lang == "ru" else "–û–±–µ—Ä—ñ—Ç—å —Ç–æ–≤–∞—Ä –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥–æ –∫–æ—à–∏–∫–∞:", reply_markup=markup)

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ inline –∫–Ω–æ–ø–æ–∫ ---

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    user_id = call.from_user.id
    lang = user_language.get(user_id, "ru")

    if call.data.startswith("add_to_cart"):
        _, product_name, price_str = call.data.split("|")
        price = int(price_str)
        user_carts[user_id].append((product_name, price))
        bot.answer_callback_query(call.id, text="–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É!" if lang == "ru" else "–î–æ–¥–∞–Ω–æ –¥–æ –∫–æ—à–∏–∫–∞!")

    elif call.data == "back_to_catalog":
        show_catalog_menu(call.message)

# --- –ö–æ—Ä–∑–∏–Ω–∞ ---

def show_cart(message):
    user_id = message.from_user.id
    lang = user_language.get(user_id, "ru")
    cart = user_carts[user_id]

    if not cart:
        bot.send_message(user_id, texts["cart_empty_ru"] if lang == "ru" else texts["cart_empty_ua"])
        return

    lines = []
    total = 0
    for i, (name, price) in enumerate(cart, 1):
        lines.append(f"{i}. {name} ‚Äî {price} ‚Ç¥")
        total += price
    text = (texts["cart_title_ru"] if lang == "ru" else texts["cart_title_ua"]) + "\n".join(lines) + (texts["cart_total_ru"] if lang == "ru" else texts["cart_total_ua"]).format(total=total)

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton(t("order_button_ru") if lang == "ru" else t("order_button_ua")))
    markup.add(types.KeyboardButton(t("clear_cart_ru") if lang == "ru" else t("clear_cart_ua")))
    markup.add(types.KeyboardButton(t("back_btn_ru") if lang == "ru" else t("back_btn_ua")))
    bot.send_message(user_id, text, reply_markup=markup)

# --- –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ ---

@bot.message_handler(func=lambda m: m.text in [texts["order_button_ru"], texts["order_button_ua"]])
def order_handler(message):
    user_id = message.from_user.id
    lang = user_language.get(user_id, "ru")
    cart = user_carts[user_id]
    if not cart:
        bot.send_message(user_id, texts["cart_empty_ru"] if lang == "ru" else texts["cart_empty_ua"])
        return

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(
        types.KeyboardButton(t("pay_on_delivery_ru") if lang == "ru" else t("pay_on_delivery_ua")),
        types.KeyboardButton(t("pay_prepay_ru") if lang == "ru" else t("pay_prepay_ua")),
    )
    bot.send_message(user_id, t("pay_method_ru") if lang == "ru" else t("pay_method_ua"), reply_markup=markup)

    # –î–æ–±–∞–≤–∏–º —Å—É–º–º—É –∫ –ø–æ–∫—É–ø–∫–∞–º —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
    amount = sum(price for _, price in cart)
    user_spending[user_id] += amount
    if user_id in user_referrer:
        referrer_id = user_referrer[user_id]
        user_spending[referrer_id] += amount
        try:
            bot.send_message(referrer_id,
                             (texts["referral_purchase_ru"] if lang == "ru" else texts["referral_purchase_ua"]).format(
                                 user=f"@{message.from_user.username or message.from_user.first_name}",
                                 amount=amount,
                                 total=user_spending[referrer_id]))
        except Exception:
            pass

bot.infinity_polling()
